package com.uw.css.uml.parser;

import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.Resource;

import java.io.InputStream;

public class Ontology {
    public static final String RDF = "http://www.w3.org/1999/02/22-rdf-syntax-ns#";
    public static final String RDFS = "http://www.w3.org/2000/01/rdf-schema#";
    public static final String WOC = "http://rdf.webofcode.org/woc/";
    private static final Model model = ontology();
    public static final Resource PACKAGE_ENTITY;
    public static final Resource CLASS_ENTITY;
    public static final Resource INTERFACE_ENTITY;
    public static final Resource ENUM_ENTITY;
    public static final Resource ANNOTATION_ENTITY;
    public static final Resource PRIMITIVE_ENTITY;
    public static final Resource ARRAY_ENTITY;
    public static final Resource TYPE_VARIABLE_ENTITY;
    public static final Resource PARAMETERIZED_TYPE_ENTITY;
    public static final Resource FIELD_ENTITY;
    public static final Resource CONSTRUCTOR_ENTITY;
    public static final Resource METHOD_ENTITY;
    public static final Resource PARAMETER_ENTITY;
    public static final Resource LOCAL_VARIABLE_ENTITY;
    public static final Resource LAMBDA_ENTITY;
    public static final Resource ANONYMOUS_CLASS_ENTITY;
    public static final Resource TYPE_ARGUMENT_ENTITY;
    public static final Resource WILDCARD_ENTITY;
    public static final Resource PROJECT_ENTITY;
    public static final Resource MAVEN_PROJECT_ENTITY;
    public static final Resource GRADLE_PROJECT_ENTITY;
    public static final Resource JAR_FILE_ENTITY;
    public static final Resource STATEMENT_ENTITY;
    public static final Resource BLOCK_ENTITY;
    public static final Resource IF_THEN_ELSE_ENTITY;
    public static final Resource SWITCH_ENTITY;
    public static final Resource CASE_ENTITY;
    public static final Resource DEFAULT_ENTITY;
    public static final Resource WHILE_ENTITY;
    public static final Resource DO_WHILE_ENTITY;
    public static final Resource FOR_ENTITY;
    public static final Resource FOR_EACH_ENTITY;
    public static final Resource TRY_ENTITY;
    public static final Resource RETURN_ENTITY;
    public static final Resource THROW_ENTITY;
    public static final Resource BREAK_ENTITY;
    public static final Resource CONTINUE_ENTITY;
    public static final Resource ASSERT_ENTITY;
    public static final Resource SYNCHRONIZED_ENTITY;
    public static final Resource LOCAL_VARIABLE_DECLARATION_ENTITY;
    public static final Resource CLASS_DECLARATION_ENTITY;
    public static final Resource EXPRESSION_STATEMENT_ENTITY;
    public static final Resource STATEMENT_EXPRESSION_LIST_ENTITY;
    public static final Resource CATCH_ENTITY;
    public static final Resource FINALLY_ENTITY;
    public static final Resource EXPRESSION_ENTITY;
    public static final Resource ASSIGNMENT_EXPRESSION_ENTITY;
    public static final Resource METHOD_INVOCATION_EXPRESSION_ENTITY;
    public static final Resource ACTUAL_ARGUMENT_ENTITY;
    public static final Resource CLASS_INSTANCE_CREATION_EXPRESSION_ENTITY;
    public static final Property RDF_TYPE_PROPERTY;
    public static final Property RDFS_LABEL_PROPERTY;
    public static final Property JAVA_TYPE_PROPERTY;
    public static final Property COMMENT_PROPERTY;
    public static final Property NAME_PROPERTY;
    public static final Property SIMPLE_NAME_PROPERTY;
    public static final Property CANONICAL_NAME_PROPERTY;
    public static final Property DECLARED_BY_PROPERTY;
    public static final Property HAS_PACKAGE_PROPERTY;
    public static final Property IS_PACKAGE_OF_PROPERTY;
    public static final Property HAS_CONSTRUCTOR_PROPERTY;
    public static final Property HAS_METHOD_PROPERTY;
    public static final Property HAS_FIELD_PROPERTY;
    public static final Property RETURN_TYPE_PROPERTY;
    public static final Property RETURNS_VAR_PROPERTY;
    public static final Property RETURN_DESCRIPTION_PROPERTY;
    public static final Property CONSTRUCTS_PROPERTY;
    public static final Property PARAMETER_PROPERTY;
    public static final Property POSITION_PROPERTY;
    public static final Property SOURCE_CODE_PROPERTY;
    public static final Property THROWS_PROPERTY;
    public static final Property MODIFIER_PROPERTY;
    public static final Property REFERENCES_PROPERTY;
    public static final Property EXTENDS_PROPERTY;
    public static final Property IMPLEMENTS_PROPERTY;
    public static final Property SUPER_PROPERTY;
    public static final Property ARRAY_OF_PROPERTY;
    public static final Property DIMENSIONS_PROPERTY;
    public static final Property FORMAL_TYPE_PARAMETER_PROPERTY;
    public static final Property ACTUAL_TYPE_ARGUMENT_PROPERTY;
    public static final Property GENERIC_TYPE_PROPERTY;
    public static final Property ANNOTATION_PROPERTY;
    public static final Property OVERRIDES_PROPERTY;
    public static final Property VAR_ARGS_PROPERTY;
    public static final Property PROJECT_PROPERTY;
    public static final Property SUBPROJECT_PROPERTY;
    public static final Property BUILD_FILE_PROPERTY;
    public static final Property DEPENDENCY_PROPERTY;
    public static final Property LINE_PROPERTY;
    public static final Property NEXT_PROPERTY;
    public static final Property CONDITION_PROPERTY;
    public static final Property STATEMENT_PROPERTY;
    public static final Property THEN_PROPERTY;
    public static final Property ELSE_PROPERTY;
    public static final Property BODY_PROPERTY;
    public static final Property END_LINE_PROPERTY;
    public static final Property FOR_INIT_PROPERTY;
    public static final Property FOR_UPDATE_PROPERTY;
    public static final Property EXPRESSION_PROPERTY;
    public static final Property RETURNED_EXPRESSION_PROPERTY;
    public static final Property THROWN_EXPRESSION_PROPERTY;
    public static final Property ASSERT_EXPRESSION_PROPERTY;
    public static final Property VARIABLE_PROPERTY;
    public static final Property CATCH_CLAUSE_PROPERTY;
    public static final Property CATCH_FORMAL_PARAMETER_PROPERTY;
    public static final Property FINALLY_CLAUSE_PROPERTY;
    public static final Property RESOURCE_PROPERTY;
    public static final Property TARGETED_LABEL_PROPERTY;
    public static final Property WOC_LABEL_PROPERTY;
    public static final Property INITIALIZER_PROPERTY;
    public static final Property DECLARATION_PROPERTY;
    public static final Property SWITCH_LABEL_PROPERTY;
    public static final Property LEFT_HAND_SIDE_PROPERTY;
    public static final Property INVOKES_PROPERTY;
    public static final Property ARGUMENT_PROPERTY;
    public static final Property TARGET_PROPERTY;
    public static final Resource PUBLIC_INDIVIDUAL;
    public static final Resource PRIVATE_INDIVIDUAL;
    public static final Resource PROTECTED_INDIVIDUAL;
    public static final Resource DEFAULT_INDIVIDUAL;
    public static final Resource ABSTRACT_INDIVIDUAL;
    public static final Resource FINAL_INDIVIDUAL;
    public static final Resource STATIC_INDIVIDUAL;
    public static final Resource SYNCHRONIZED_INDIVIDUAL;
    public static final Resource VOLATILE_INDIVIDUAL;

    public Ontology() {
    }

    private static Model ontology() {
        try {
            InputStream resourceAsStream = Ontology.class.getClassLoader().getResourceAsStream("com/uw/css/ontology/CodeOntology.owl");
            return ModelFactory.createDefaultModel().read(resourceAsStream, "");
        } catch (Exception var2) {
            throw new RuntimeException(var2);
        }
    }

    public static Model getModel() {
        return model;
    }

    static {
        PACKAGE_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Package");
        CLASS_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Class");
        INTERFACE_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Interface");
        ENUM_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Enum");
        ANNOTATION_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Annotation");
        PRIMITIVE_ENTITY = model.getResource("http://rdf.webofcode.org/woc/PrimitiveType");
        ARRAY_ENTITY = model.getResource("http://rdf.webofcode.org/woc/ArrayType");
        TYPE_VARIABLE_ENTITY = model.getResource("http://rdf.webofcode.org/woc/TypeVariable");
        PARAMETERIZED_TYPE_ENTITY = model.getResource("http://rdf.webofcode.org/woc/ParameterizedType");
        FIELD_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Field");
        CONSTRUCTOR_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Constructor");
        METHOD_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Method");
        PARAMETER_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Parameter");
        LOCAL_VARIABLE_ENTITY = model.getResource("http://rdf.webofcode.org/woc/LocalVariable");
        LAMBDA_ENTITY = model.getResource("http://rdf.webofcode.org/woc/LambdaExpression");
        ANONYMOUS_CLASS_ENTITY = model.getResource("http://rdf.webofcode.org/woc/AnonymousClass");
        TYPE_ARGUMENT_ENTITY = model.getResource("http://rdf.webofcode.org/woc/TypeArgument");
        WILDCARD_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Wildcard");
        PROJECT_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Project");
        MAVEN_PROJECT_ENTITY = model.getResource("http://rdf.webofcode.org/woc/MavenProject");
        GRADLE_PROJECT_ENTITY = model.getResource("http://rdf.webofcode.org/woc/GradleProject");
        JAR_FILE_ENTITY = model.getResource("http://rdf.webofcode.org/woc/JarFile");
        STATEMENT_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Statement");
        BLOCK_ENTITY = model.getResource("http://rdf.webofcode.org/woc/BlockStatement");
        IF_THEN_ELSE_ENTITY = model.getResource("http://rdf.webofcode.org/woc/IfThenElseStatement");
        SWITCH_ENTITY = model.getResource("http://rdf.webofcode.org/woc/SwitchStatement");
        CASE_ENTITY = model.getResource("http://rdf.webofcode.org/woc/CaseLabeledBlock");
        DEFAULT_ENTITY = model.getResource("http://rdf.webofcode.org/woc/DefaultLabeledBlock");
        WHILE_ENTITY = model.getResource("http://rdf.webofcode.org/woc/WhileStatement");
        DO_WHILE_ENTITY = model.getResource("http://rdf.webofcode.org/woc/DoStatement");
        FOR_ENTITY = model.getResource("http://rdf.webofcode.org/woc/ForStatement");
        FOR_EACH_ENTITY = model.getResource("http://rdf.webofcode.org/woc/ForEachStatement");
        TRY_ENTITY = model.getResource("http://rdf.webofcode.org/woc/TryStatement");
        RETURN_ENTITY = model.getResource("http://rdf.webofcode.org/woc/ReturnStatement");
        THROW_ENTITY = model.getResource("http://rdf.webofcode.org/woc/ThrowSatement");
        BREAK_ENTITY = model.getResource("http://rdf.webofcode.org/woc/BreakStatement");
        CONTINUE_ENTITY = model.getResource("http://rdf.webofcode.org/woc/ContinueStatement");
        ASSERT_ENTITY = model.getResource("http://rdf.webofcode.org/woc/AssertStatement");
        SYNCHRONIZED_ENTITY = model.getResource("http://rdf.webofcode.org/woc/SynchronizedStatement");
        LOCAL_VARIABLE_DECLARATION_ENTITY = model.getResource("http://rdf.webofcode.org/woc/LocalVariableDeclarationStatement");
        CLASS_DECLARATION_ENTITY = model.getResource("http://rdf.webofcode.org/woc/ClassDeclarationStatement");
        EXPRESSION_STATEMENT_ENTITY = model.getResource("http://rdf.webofcode.org/woc/ExpressionStatement");
        STATEMENT_EXPRESSION_LIST_ENTITY = model.getResource("http://rdf.webofcode.org/woc/StatementExpressionList");
        CATCH_ENTITY = model.getResource("http://rdf.webofcode.org/woc/CatchBlock");
        FINALLY_ENTITY = model.getResource("http://rdf.webofcode.org/woc/FinallyBlock");
        EXPRESSION_ENTITY = model.getResource("http://rdf.webofcode.org/woc/Expression");
        ASSIGNMENT_EXPRESSION_ENTITY = model.getResource("http://rdf.webofcode.org/woc/AssignmentExpression");
        METHOD_INVOCATION_EXPRESSION_ENTITY = model.getResource("http://rdf.webofcode.org/woc/MethodInvocationExpression");
        ACTUAL_ARGUMENT_ENTITY = model.getResource("http://rdf.webofcode.org/woc/ActualArgument");
        CLASS_INSTANCE_CREATION_EXPRESSION_ENTITY = model.getResource("http://rdf.webofcode.org/woc/ClassInstanceCreationExpression");
        RDF_TYPE_PROPERTY = model.getProperty("http://www.w3.org/1999/02/22-rdf-syntax-ns#type");
        RDFS_LABEL_PROPERTY = model.getProperty("http://www.w3.org/2000/01/rdf-schema#label");
        JAVA_TYPE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasType");
        COMMENT_PROPERTY = model.getProperty("http://www.w3.org/2000/01/rdf-schema#comment");
        NAME_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasName");
        SIMPLE_NAME_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasSimpleName");
        CANONICAL_NAME_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasCanonicalName");
        DECLARED_BY_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/isDeclaredBy");
        HAS_PACKAGE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasPackage");
        IS_PACKAGE_OF_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/isPackageOf");
        HAS_CONSTRUCTOR_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasConstructor");
        HAS_METHOD_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasMethod");
        HAS_FIELD_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasField");
        RETURN_TYPE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasReturnType");
        RETURNS_VAR_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/returns");
        RETURN_DESCRIPTION_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasReturnDescription");
        CONSTRUCTS_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/constructs");
        PARAMETER_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasParameter");
        POSITION_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasPosition");
        SOURCE_CODE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasSourceCode");
        THROWS_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/throws");
        MODIFIER_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasModifier");
        REFERENCES_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/references");
        EXTENDS_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/extends");
        IMPLEMENTS_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/implements");
        SUPER_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasSuperBound");
        ARRAY_OF_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/isArrayOf");
        DIMENSIONS_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasDimensions");
        FORMAL_TYPE_PARAMETER_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasFormalTypeParameter");
        ACTUAL_TYPE_ARGUMENT_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasActualTypeArgument");
        GENERIC_TYPE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasGenericType");
        ANNOTATION_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasAnnotation");
        OVERRIDES_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/overrides");
        VAR_ARGS_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/isVarArgs");
        PROJECT_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasProject");
        SUBPROJECT_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasSubProject");
        BUILD_FILE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasBuildFile");
        DEPENDENCY_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasDependency");
        LINE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasLine");
        NEXT_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasNextStatement");
        CONDITION_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasCondition");
        STATEMENT_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasSubStatement");
        THEN_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasThenBranch");
        ELSE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasElseBranch");
        BODY_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasBody");
        END_LINE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasEndLine");
        FOR_INIT_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasForInit");
        FOR_UPDATE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasForUpdate");
        EXPRESSION_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasSubExpression");
        RETURNED_EXPRESSION_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasReturnedExpression");
        THROWN_EXPRESSION_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasThrownExpression");
        ASSERT_EXPRESSION_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasAssertExpression");
        VARIABLE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasVariable");
        CATCH_CLAUSE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasCatchClause");
        CATCH_FORMAL_PARAMETER_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasCatchFormalParameter");
        FINALLY_CLAUSE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasFinallyClause");
        RESOURCE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasResource");
        TARGETED_LABEL_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasTargetedLabel");
        WOC_LABEL_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasLabel");
        INITIALIZER_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasInitializer");
        DECLARATION_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasDeclaration");
        SWITCH_LABEL_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasSwitchLabel");
        LEFT_HAND_SIDE_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasLeftHandSide");
        INVOKES_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/invokes");
        ARGUMENT_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasArgument");
        TARGET_PROPERTY = model.getProperty("http://rdf.webofcode.org/woc/hasTarget");
        PUBLIC_INDIVIDUAL = model.getResource("http://rdf.webofcode.org/woc/Public");
        PRIVATE_INDIVIDUAL = model.getResource("http://rdf.webofcode.org/woc/Private");
        PROTECTED_INDIVIDUAL = model.getResource("http://rdf.webofcode.org/woc/Protected");
        DEFAULT_INDIVIDUAL = model.getResource("http://rdf.webofcode.org/woc/Default");
        ABSTRACT_INDIVIDUAL = model.getResource("http://rdf.webofcode.org/woc/Abstract");
        FINAL_INDIVIDUAL = model.getResource("http://rdf.webofcode.org/woc/Final");
        STATIC_INDIVIDUAL = model.getResource("http://rdf.webofcode.org/woc/Static");
        SYNCHRONIZED_INDIVIDUAL = model.getResource("http://rdf.webofcode.org/woc/Synchronized");
        VOLATILE_INDIVIDUAL = model.getResource("http://rdf.webofcode.org/woc/Volatile");
    }
}
